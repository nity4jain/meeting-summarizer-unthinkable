{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91884\\\\OneDrive\\\\Documents\\\\Desktop\\\\meeting-summarizer\\\\frontend\\\\src\\\\components\\\\AudioUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport WebSpeechRecorder from './WebSpeechRecorder';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioUploader = ({\n  onUploadStart,\n  onError\n}) => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [activeMode, setActiveMode] = useState('file'); // 'file' or 'speech'\n\n  const processTranscript = async transcriptData => {\n    setUploading(true);\n    try {\n      onUploadStart({\n        filename: transcriptData.filename,\n        mode: 'speech-recognition',\n        processing: true\n      });\n\n      // Send transcript directly to backend for summarization\n      const response = await axios.post('/api/summarizer/process-transcript', {\n        transcript: transcriptData.transcript,\n        filename: transcriptData.filename\n      });\n      if (response.data.success) {\n        setTimeout(() => {\n          onUploadStart({\n            ...transcriptData,\n            processing: true,\n            results: response.data.results\n          });\n        }, 1000);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Processing error:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Processing failed';\n      onError(errorMessage);\n    } finally {\n      setUploading(false);\n    }\n  };\n  const processFile = async file => {\n    // For file upload, we'll use a simple approach:\n    // 1. Show mock transcription (since we don't have paid API)\n    // 2. Process with summarization\n\n    setUploading(true);\n    setUploadProgress(0);\n    try {\n      onUploadStart({\n        filename: file.name,\n        size: file.size\n      });\n\n      // Simulate file processing\n      for (let progress = 0; progress <= 100; progress += 20) {\n        setUploadProgress(progress);\n        await new Promise(resolve => setTimeout(resolve, 500));\n      }\n\n      // Use mock transcript for demo\n      const mockTranscript = `This is a demonstration of the meeting summarizer. In this sample meeting, we discussed quarterly results, upcoming project timelines, and assigned various action items to team members. John will handle the marketing analysis, Sarah will coordinate with the development team, and Mike will prepare the financial projections. Our next meeting is scheduled for next Friday at 2 PM.`;\n      const response = await axios.post('/api/summarizer/process-transcript', {\n        transcript: mockTranscript,\n        filename: file.name\n      });\n      if (response.data.success) {\n        setTimeout(() => {\n          onUploadStart({\n            filename: file.name,\n            processing: true,\n            results: response.data.results\n          });\n        }, 1000);\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Upload error:', error);\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Upload failed';\n      onError(errorMessage);\n    } finally {\n      setUploading(false);\n      setUploadProgress(0);\n    }\n  };\n  const onDrop = useCallback(async acceptedFiles => {\n    if (acceptedFiles.length === 0) return;\n    const file = acceptedFiles;\n    await processFile(file);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    fileRejections\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'audio/*': ['.mp3', '.wav', '.m4a', '.ogg'],\n      'video/*': ['.mp4', '.mpeg']\n    },\n    maxSize: 50 * 1024 * 1024,\n    // 50MB\n    multiple: false,\n    disabled: uploading || activeMode === 'speech'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploader-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Meeting Audio Processing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Choose your preferred input method:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mode-button ${activeMode === 'file' ? 'active' : ''}`,\n        onClick: () => setActiveMode('file'),\n        disabled: uploading,\n        children: \"\\uD83D\\uDCC1 Upload Audio File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mode-button ${activeMode === 'speech' ? 'active' : ''}`,\n        onClick: () => setActiveMode('speech'),\n        disabled: uploading,\n        children: \"\\uD83C\\uDF99\\uFE0F Live Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), activeMode === 'file' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: `dropzone ${isDragActive ? 'active' : ''} ${uploading ? 'uploading' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), uploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-progress\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Processing your audio file...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${uploadProgress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"progress-text\",\n            children: [uploadProgress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\",\n            children: \"\\uD83D\\uDCC1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Drop your audio file here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Drag & drop an audio file here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"or \", /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"browse-button\",\n                children: \"browse files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"format-info\",\n              children: \"Supports: MP3, WAV, M4A, OGG, MP4 (max 50MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), fileRejections.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-errors\",\n        children: fileRejections.map(({\n          file,\n          errors\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: file.path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: errors.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: e.message\n            }, e.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 38\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this)]\n        }, file.path, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(WebSpeechRecorder, {\n      onTranscriptionComplete: processTranscript,\n      onError: onError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-features\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feature-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feature\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"feature-icon\",\n            children: \"\\u26A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Real-time Processing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Instant speech-to-text in your browser\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feature\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"feature-icon\",\n            children: \"\\uD83C\\uDFAF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Action Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"AI extracts tasks and decisions automatically\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feature\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"feature-icon\",\n            children: \"\\uD83D\\uDCCB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Smart Summaries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Key insights generated with free AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioUploader, \"pD+n6Q0gdkS7MnnTtgA/j+EWMTk=\", false, function () {\n  return [useDropzone];\n});\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","axios","WebSpeechRecorder","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioUploader","onUploadStart","onError","_s","uploading","setUploading","uploadProgress","setUploadProgress","activeMode","setActiveMode","processTranscript","transcriptData","filename","mode","processing","response","post","transcript","data","success","setTimeout","results","error","_error$response","_error$response$data","console","errorMessage","message","processFile","file","name","size","progress","Promise","resolve","mockTranscript","_error$response2","_error$response2$data","onDrop","acceptedFiles","length","getRootProps","getInputProps","isDragActive","fileRejections","accept","maxSize","multiple","disabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","width","type","map","errors","path","e","code","onTranscriptionComplete","_c","$RefreshReg$"],"sources":["C:/Users/91884/OneDrive/Documents/Desktop/meeting-summarizer/frontend/src/components/AudioUploader.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport WebSpeechRecorder from './WebSpeechRecorder';\r\n\r\nconst AudioUploader = ({ onUploadStart, onError }) => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [activeMode, setActiveMode] = useState('file'); // 'file' or 'speech'\r\n\r\n  const processTranscript = async (transcriptData) => {\r\n    setUploading(true);\r\n    \r\n    try {\r\n      onUploadStart({ \r\n        filename: transcriptData.filename, \r\n        mode: 'speech-recognition',\r\n        processing: true \r\n      });\r\n\r\n      // Send transcript directly to backend for summarization\r\n      const response = await axios.post('/api/summarizer/process-transcript', {\r\n        transcript: transcriptData.transcript,\r\n        filename: transcriptData.filename\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setTimeout(() => {\r\n          onUploadStart({ \r\n            ...transcriptData, \r\n            processing: true,\r\n            results: response.data.results \r\n          });\r\n        }, 1000);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Processing error:', error);\r\n      const errorMessage = error.response?.data?.message || error.message || 'Processing failed';\r\n      onError(errorMessage);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const processFile = async (file) => {\r\n    // For file upload, we'll use a simple approach:\r\n    // 1. Show mock transcription (since we don't have paid API)\r\n    // 2. Process with summarization\r\n    \r\n    setUploading(true);\r\n    setUploadProgress(0);\r\n\r\n    try {\r\n      onUploadStart({ filename: file.name, size: file.size });\r\n\r\n      // Simulate file processing\r\n      for (let progress = 0; progress <= 100; progress += 20) {\r\n        setUploadProgress(progress);\r\n        await new Promise(resolve => setTimeout(resolve, 500));\r\n      }\r\n\r\n      // Use mock transcript for demo\r\n      const mockTranscript = `This is a demonstration of the meeting summarizer. In this sample meeting, we discussed quarterly results, upcoming project timelines, and assigned various action items to team members. John will handle the marketing analysis, Sarah will coordinate with the development team, and Mike will prepare the financial projections. Our next meeting is scheduled for next Friday at 2 PM.`;\r\n\r\n      const response = await axios.post('/api/summarizer/process-transcript', {\r\n        transcript: mockTranscript,\r\n        filename: file.name\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setTimeout(() => {\r\n          onUploadStart({ \r\n            filename: file.name, \r\n            processing: true,\r\n            results: response.data.results \r\n          });\r\n        }, 1000);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      const errorMessage = error.response?.data?.message || error.message || 'Upload failed';\r\n      onError(errorMessage);\r\n    } finally {\r\n      setUploading(false);\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles.length === 0) return;\r\n    \r\n    const file = acceptedFiles;\r\n    await processFile(file);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive, fileRejections } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'audio/*': ['.mp3', '.wav', '.m4a', '.ogg'],\r\n      'video/*': ['.mp4', '.mpeg']\r\n    },\r\n    maxSize: 50 * 1024 * 1024, // 50MB\r\n    multiple: false,\r\n    disabled: uploading || activeMode === 'speech'\r\n  });\r\n\r\n  return (\r\n    <div className=\"uploader-section\">\r\n      <div className=\"upload-instructions\">\r\n        <h2>Meeting Audio Processing</h2>\r\n        <p>Choose your preferred input method:</p>\r\n      </div>\r\n\r\n      {/* Mode Selection */}\r\n      <div className=\"mode-selector\">\r\n        <button \r\n          className={`mode-button ${activeMode === 'file' ? 'active' : ''}`}\r\n          onClick={() => setActiveMode('file')}\r\n          disabled={uploading}\r\n        >\r\n          📁 Upload Audio File\r\n        </button>\r\n        <button \r\n          className={`mode-button ${activeMode === 'speech' ? 'active' : ''}`}\r\n          onClick={() => setActiveMode('speech')}\r\n          disabled={uploading}\r\n        >\r\n          🎙️ Live Recording\r\n        </button>\r\n      </div>\r\n\r\n      {activeMode === 'file' ? (\r\n        <>\r\n          <div {...getRootProps()} className={`dropzone ${isDragActive ? 'active' : ''} ${uploading ? 'uploading' : ''}`}>\r\n            <input {...getInputProps()} />\r\n            \r\n            {uploading ? (\r\n              <div className=\"upload-progress\">\r\n                <div className=\"spinner\"></div>\r\n                <p>Processing your audio file...</p>\r\n                <div className=\"progress-bar\">\r\n                  <div \r\n                    className=\"progress-fill\" \r\n                    style={{ width: `${uploadProgress}%` }}\r\n                  ></div>\r\n                </div>\r\n                <p className=\"progress-text\">{uploadProgress}%</p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"upload-content\">\r\n                <div className=\"upload-icon\">📁</div>\r\n                {isDragActive ? (\r\n                  <p><strong>Drop your audio file here</strong></p>\r\n                ) : (\r\n                  <>\r\n                    <p><strong>Drag & drop an audio file here</strong></p>\r\n                    <p>or <button type=\"button\" className=\"browse-button\">browse files</button></p>\r\n                    <p className=\"format-info\">Supports: MP3, WAV, M4A, OGG, MP4 (max 50MB)</p>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {fileRejections.length > 0 && (\r\n            <div className=\"upload-errors\">\r\n              {fileRejections.map(({ file, errors }) => (\r\n                <div key={file.path} className=\"error-message\">\r\n                  <strong>{file.path}</strong>\r\n                  <ul>\r\n                    {errors.map(e => <li key={e.code}>{e.message}</li>)}\r\n                  </ul>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <WebSpeechRecorder \r\n          onTranscriptionComplete={processTranscript}\r\n          onError={onError}\r\n        />\r\n      )}\r\n\r\n      <div className=\"upload-features\">\r\n        <div className=\"feature-grid\">\r\n          <div className=\"feature\">\r\n            <span className=\"feature-icon\">⚡</span>\r\n            <h3>Real-time Processing</h3>\r\n            <p>Instant speech-to-text in your browser</p>\r\n          </div>\r\n          <div className=\"feature\">\r\n            <span className=\"feature-icon\">🎯</span>\r\n            <h3>Action Items</h3>\r\n            <p>AI extracts tasks and decisions automatically</p>\r\n          </div>\r\n          <div className=\"feature\">\r\n            <span className=\"feature-icon\">📋</span>\r\n            <h3>Smart Summaries</h3>\r\n            <p>Key insights generated with free AI</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioUploader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}