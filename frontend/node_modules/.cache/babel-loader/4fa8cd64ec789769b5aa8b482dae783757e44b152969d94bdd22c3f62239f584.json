{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91884\\\\OneDrive\\\\Documents\\\\Desktop\\\\meeting-summarizer\\\\frontend\\\\src\\\\components\\\\WebSpeechRecorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSpeechRecorder = ({\n  onTranscriptionComplete,\n  onError\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [isSupported, setIsSupported] = useState(false);\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognition) {\n      setIsSupported(true);\n      const recognition = new SpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = 'en-US';\n      let finalTranscript = '';\n      recognition.onstart = () => {\n        setIsRecording(true);\n        finalTranscript = '';\n        setTranscript('');\n      };\n      recognition.onresult = event => {\n        let interimTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          if (event.results[i].isFinal) {\n            finalTranscript += event.results[i][0].transcript + ' ';\n          } else {\n            interimTranscript += event.results[i][0].transcript;\n          }\n        }\n        setTranscript(finalTranscript + interimTranscript);\n      };\n      recognition.onend = () => {\n        setIsRecording(false);\n        if (finalTranscript.trim()) {\n          setTranscript(finalTranscript.trim()); // Display the final transcript\n          onTranscriptionComplete({\n            transcript: finalTranscript.trim(),\n            filename: 'voice-recording.wav'\n          });\n        } else {\n          setTranscript('');\n          onError('No speech detected. Please try again.');\n        }\n      };\n      recognition.onerror = event => {\n        setIsRecording(false);\n        setTranscript('');\n        let msg = 'Speech recognition error';\n        if (event.error === 'no-speech') msg = 'No speech detected. Try again.';else if (event.error === 'audio-capture') msg = 'Mic not found.';else if (event.error === 'not-allowed') msg = 'Mic access denied.';\n        onError(msg);\n      };\n      recognitionRef.current = recognition;\n    } else {\n      setIsSupported(false);\n    }\n    return () => {\n      if (recognitionRef.current && isRecording) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, [onTranscriptionComplete, onError, isRecording]);\n  const startRecording = () => {\n    if (isSupported && recognitionRef.current && !isRecording) {\n      recognitionRef.current.start();\n    }\n  };\n  const stopRecording = () => {\n    if (isSupported && recognitionRef.current && isRecording) {\n      recognitionRef.current.stop();\n    }\n  };\n  return !isSupported ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red',\n      padding: '1rem'\n    },\n    children: \"Speech recognition not supported on this browser (try Chrome/Edge).\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"web-speech-recorder\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: isRecording ? stopRecording : startRecording,\n      className: \"record-button\",\n      children: isRecording ? 'Stop Recording' : 'Start Recording'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem',\n        minHeight: '40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Transcript:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minHeight: '20px',\n          color: 'blue'\n        },\n        children: transcript || /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'gray'\n          },\n          children: isRecording ? 'Listening...' : 'No transcript yet.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSpeechRecorder, \"+AsOWtNgD5Hf4kDwONCPC7tBo2g=\");\n_c = WebSpeechRecorder;\nexport default WebSpeechRecorder;\nvar _c;\n$RefreshReg$(_c, \"WebSpeechRecorder\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","WebSpeechRecorder","onTranscriptionComplete","onError","_s","isRecording","setIsRecording","transcript","setTranscript","isSupported","setIsSupported","recognitionRef","SpeechRecognition","window","webkitSpeechRecognition","recognition","continuous","interimResults","lang","finalTranscript","onstart","onresult","event","interimTranscript","i","resultIndex","results","length","isFinal","onend","trim","filename","onerror","msg","error","current","stop","startRecording","start","stopRecording","style","color","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","marginTop","minHeight","_c","$RefreshReg$"],"sources":["C:/Users/91884/OneDrive/Documents/Desktop/meeting-summarizer/frontend/src/components/WebSpeechRecorder.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst WebSpeechRecorder = ({ onTranscriptionComplete, onError }) => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [isSupported, setIsSupported] = useState(false);\r\n  const recognitionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (SpeechRecognition) {\r\n      setIsSupported(true);\r\n\r\n      const recognition = new SpeechRecognition();\r\n      recognition.continuous = true;\r\n      recognition.interimResults = true;\r\n      recognition.lang = 'en-US';\r\n\r\n      let finalTranscript = '';\r\n\r\n      recognition.onstart = () => {\r\n        setIsRecording(true);\r\n        finalTranscript = '';\r\n        setTranscript('');\r\n      };\r\n\r\n      recognition.onresult = (event) => {\r\n        let interimTranscript = '';\r\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n          if (event.results[i].isFinal) {\r\n            finalTranscript += event.results[i][0].transcript + ' ';\r\n          } else {\r\n            interimTranscript += event.results[i][0].transcript;\r\n          }\r\n        }\r\n        setTranscript(finalTranscript + interimTranscript);\r\n      };\r\n\r\n      recognition.onend = () => {\r\n        setIsRecording(false);\r\n        if (finalTranscript.trim()) {\r\n          setTranscript(finalTranscript.trim()); // Display the final transcript\r\n          onTranscriptionComplete({\r\n            transcript: finalTranscript.trim(),\r\n            filename: 'voice-recording.wav',\r\n          });\r\n        } else {\r\n          setTranscript('');\r\n          onError('No speech detected. Please try again.');\r\n        }\r\n      };\r\n\r\n      recognition.onerror = (event) => {\r\n        setIsRecording(false);\r\n        setTranscript('');\r\n        let msg = 'Speech recognition error';\r\n        if (event.error === 'no-speech') msg = 'No speech detected. Try again.';\r\n        else if (event.error === 'audio-capture') msg = 'Mic not found.';\r\n        else if (event.error === 'not-allowed') msg = 'Mic access denied.';\r\n        onError(msg);\r\n      };\r\n\r\n      recognitionRef.current = recognition;\r\n    } else {\r\n      setIsSupported(false);\r\n    }\r\n\r\n    return () => {\r\n      if (recognitionRef.current && isRecording) {\r\n        recognitionRef.current.stop();\r\n      }\r\n    };\r\n  }, [onTranscriptionComplete, onError, isRecording]);\r\n\r\n  const startRecording = () => {\r\n    if (isSupported && recognitionRef.current && !isRecording) {\r\n      recognitionRef.current.start();\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (isSupported && recognitionRef.current && isRecording) {\r\n      recognitionRef.current.stop();\r\n    }\r\n  };\r\n\r\n  return !isSupported ? (\r\n    <div style={{ color: 'red', padding: '1rem' }}>\r\n      Speech recognition not supported on this browser (try Chrome/Edge).\r\n    </div>\r\n  ) : (\r\n    <div className=\"web-speech-recorder\">\r\n      <button\r\n        onClick={isRecording ? stopRecording : startRecording}\r\n        className=\"record-button\"\r\n      >\r\n        {isRecording ? 'Stop Recording' : 'Start Recording'}\r\n      </button>\r\n\r\n      <div style={{ marginTop: '1rem', minHeight: '40px' }}>\r\n        <strong>Transcript:</strong>\r\n        <div style={{ minHeight: '20px', color: 'blue' }}>\r\n          {transcript || (\r\n            <span style={{ color: 'gray' }}>\r\n              {isRecording ? 'Listening...' : 'No transcript yet.'}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebSpeechRecorder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}